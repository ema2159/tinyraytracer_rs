(undo-tree-save-format-version . 1)
"7555556e96f782a3b23456f192176cdd144a960f"
[nil nil nil nil (25507 41228 415108 852000) 0 nil]
([nil nil ((nil rear-nonsticky nil 1176 . 1177) (nil fontified nil 1 . 1177) (1 . 1177) (#("fn main() {
    println!(\"Hello, world!\");
}
" 0 2 (face tree-sitter-hl-face:keyword fontified t) 2 3 (fontified t) 3 7 (face tree-sitter-hl-face:function fontified t) 7 8 (face (rainbow-delimiters-depth-1-face tree-sitter-hl-face:punctuation.bracket) fontified t) 8 9 (face (rainbow-delimiters-depth-1-face tree-sitter-hl-face:punctuation.bracket) fontified t) 9 10 (fontified t) 10 11 (face (rainbow-delimiters-depth-1-face) fontified t) 11 12 (fontified t) 12 13 (face highlight-indent-guides-character-face display "│" highlight-indent-guides-prop (0 nil t 1 (character (nil) (face highlight-indent-guides-character-face display "│") (top) (face highlight-indent-guides-top-character-face display "│")) ((#<marker at 1 in main.rs> . #<marker at 1 in main.rs>))) fontified t) 13 14 (highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 1 in main.rs> . #<marker at 1 in main.rs>))) fontified t) 14 15 (highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 1 in main.rs> . #<marker at 1 in main.rs>))) fontified t) 15 16 (highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 1 in main.rs> . #<marker at 1 in main.rs>))) fontified t) 16 23 (face tree-sitter-hl-face:function.macro fontified t) 23 24 (face tree-sitter-hl-face:function.macro fontified t) 24 25 (face (rainbow-delimiters-depth-2-face tree-sitter-hl-face:punctuation.bracket) fontified t) 25 40 (face tree-sitter-hl-face:string fontified t) 40 41 (face (rainbow-delimiters-depth-2-face tree-sitter-hl-face:punctuation.bracket) fontified t) 41 42 (face tree-sitter-hl-face:punctuation.delimiter fontified t) 42 43 (fontified t) 43 44 (face (rainbow-delimiters-depth-1-face) fontified t) 44 45 (fontified t)) . 1) (undo-tree-id1 . -45) (undo-tree-id2 . -45) (undo-tree-id3 . -12) (undo-tree-id4 . -42) (undo-tree-id5 . -45) (undo-tree-id6 . -45) (undo-tree-id7 . -45) (undo-tree-id8 . -45) (undo-tree-id9 . -44) (t 25507 39684 465896 460000)) nil (25507 41228 415107 290000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1) (undo-tree-id0 . -1)) nil (25507 41228 415101 365000) 0 nil])
([nil nil ((1176 . 1177)) nil (25507 41228 415073 461000) 0 nil])
([nil nil ((586 . 594) (#("enderer" 0 7 (face tree-sitter-hl-face:string fontified t)) . 586) (undo-tree-id10 . -6) (undo-tree-id11 . -6) (undo-tree-id12 . -6) (undo-tree-id13 . -6) 592 (t 25507 41228 416850 172000)) nil (25507 41303 410589 123000) 0 nil])
([nil nil ((312 . 314) (306 . 312) (#("hei" 0 3 (fontified nil)) . 306) (306 . 309) (#("height" 0 6 (fontified nil)) . -306) (306 . 312) (#("hei" 0 3 (face tree-sitter-hl-face:property fontified t)) . -306) (undo-tree-id14 . -3) 309 (302 . 309) (#("2" 0 1 (face tree-sitter-hl-face:constant.builtin fontified t)) . -302) (undo-tree-id15 . -1) (#("4" 0 1 (face tree-sitter-hl-face:constant.builtin fontified t)) . -303) (undo-tree-id16 . -1) 304 (277 . 279) (272 . 277) (#("wi" 0 2 (fontified nil)) . 272) (272 . 274) (#("width" 0 5 (fontified nil)) . -272) (272 . 277) (#("wi" 0 2 (face tree-sitter-hl-face:property fontified t)) . -272) (undo-tree-id17 . -2) 274 (268 . 274) (#("=" 0 1 (fontified t)) . -268) (undo-tree-id18 . -1) (#("1" 0 1 (face tree-sitter-hl-face:constant.builtin fontified t)) . -269) (undo-tree-id19 . -1) (#("7" 0 1 (face tree-sitter-hl-face:constant.builtin fontified t)) . -270) (undo-tree-id20 . -1) 271 (291 . 292) (#("8" 0 1 (face tree-sitter-hl-face:constant.builtin fontified t)) . -291) (undo-tree-id21 . -1) 292 (265 . 266) (#("1" 0 1 (face tree-sitter-hl-face:constant.builtin fontified t)) . -265) (undo-tree-id22 . -1) (#("5" 0 1 (face tree-sitter-hl-face:constant.builtin fontified t)) . -266) (undo-tree-id23 . -1) 267 (t 25507 41303 419646 891000)) nil (25507 41393 351201 698000) 0 nil])
([nil nil ((#("            img.put_pixel(y, x, Rgba([255, 0, 0, 255]));
" 0 1 (face highlight-indent-guides-stack-character-face display "│" fontified t highlight-indent-guides-prop (0 nil t 1 (character (nil) (face highlight-indent-guides-character-face display "│") (stack) (face highlight-indent-guides-stack-character-face display "│") (top) (face highlight-indent-guides-top-character-face display "│")) ((#<marker at 173 in main.rs> . #<marker at 1214 in main.rs>)))) 1 2 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 173 in main.rs> . #<marker at 1214 in main.rs>)))) 2 3 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 173 in main.rs> . #<marker at 1214 in main.rs>)))) 3 4 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 173 in main.rs> . #<marker at 1214 in main.rs>)))) 4 5 (face highlight-indent-guides-stack-character-face display "│" fontified t highlight-indent-guides-prop (1 nil t 1 (character (nil) (face highlight-indent-guides-character-face display "│") (top) (face highlight-indent-guides-top-character-face display "│") (stack) (face highlight-indent-guides-stack-character-face display "│")) ((#<marker at 282 in main.rs> . #<marker at 518 in main.rs>) (#<marker at 173 in main.rs> . #<marker at 1214 in main.rs>)))) 5 6 (fontified t highlight-indent-guides-prop (1 nil nil 1 nil ((#<marker at 282 in main.rs> . #<marker at 518 in main.rs>) (#<marker at 173 in main.rs> . #<marker at 1214 in main.rs>)))) 6 7 (fontified t highlight-indent-guides-prop (1 nil nil 1 nil ((#<marker at 282 in main.rs> . #<marker at 518 in main.rs>) (#<marker at 173 in main.rs> . #<marker at 1214 in main.rs>)))) 7 8 (fontified t highlight-indent-guides-prop (1 nil nil 1 nil ((#<marker at 282 in main.rs> . #<marker at 518 in main.rs>) (#<marker at 173 in main.rs> . #<marker at 1214 in main.rs>)))) 8 9 (face highlight-indent-guides-top-character-face display "│" fontified t highlight-indent-guides-prop (2 nil t 1 (character (nil) (face highlight-indent-guides-character-face display "│") (top) (face highlight-indent-guides-top-character-face display "│")) ((#<marker at 454 in main.rs> . #<marker at 508 in main.rs>) (#<marker at 282 in main.rs> . #<marker at 518 in main.rs>) (#<marker at 173 in main.rs> . #<marker at 1214 in main.rs>)))) 9 10 (fontified t highlight-indent-guides-prop (2 nil nil 1 nil ((#<marker at 454 in main.rs> . #<marker at 508 in main.rs>) (#<marker at 282 in main.rs> . #<marker at 518 in main.rs>) (#<marker at 173 in main.rs> . #<marker at 1214 in main.rs>)))) 10 11 (fontified t highlight-indent-guides-prop (2 nil nil 1 nil ((#<marker at 454 in main.rs> . #<marker at 508 in main.rs>) (#<marker at 282 in main.rs> . #<marker at 518 in main.rs>) (#<marker at 173 in main.rs> . #<marker at 1214 in main.rs>)))) 11 12 (fontified t highlight-indent-guides-prop (2 nil nil 1 nil ((#<marker at 454 in main.rs> . #<marker at 508 in main.rs>) (#<marker at 282 in main.rs> . #<marker at 518 in main.rs>) (#<marker at 173 in main.rs> . #<marker at 1214 in main.rs>)))) 12 15 (fontified t) 15 16 (face tree-sitter-hl-face:punctuation.delimiter fontified t) 16 25 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t) 25 26 (face (rainbow-delimiters-depth-4-face tree-sitter-hl-face:punctuation.bracket) fontified t) 26 32 (fontified t) 32 36 (face (tree-sitter-hl-face:constructor tree-sitter-hl-face:function.call) fontified t) 36 37 (face (rainbow-delimiters-depth-5-face tree-sitter-hl-face:punctuation.bracket) fontified t) 37 38 (face (rainbow-delimiters-depth-6-face tree-sitter-hl-face:punctuation.bracket) fontified t) 38 41 (face tree-sitter-hl-face:constant.builtin fontified t) 41 43 (fontified t) 43 44 (face tree-sitter-hl-face:constant.builtin fontified t) 44 46 (fontified t) 46 47 (face tree-sitter-hl-face:constant.builtin fontified t) 47 49 (fontified t) 49 52 (face tree-sitter-hl-face:constant.builtin fontified t) 52 53 (face (rainbow-delimiters-depth-6-face tree-sitter-hl-face:punctuation.bracket) fontified t) 53 54 (face (rainbow-delimiters-depth-5-face tree-sitter-hl-face:punctuation.bracket) fontified t) 54 55 (face (rainbow-delimiters-depth-4-face tree-sitter-hl-face:punctuation.bracket) fontified t) 55 56 (face tree-sitter-hl-face:punctuation.delimiter fontified t) 56 57 (fontified t)) . 374) (undo-tree-id45 . -56) (undo-tree-id46 . -56) (undo-tree-id47 . -32) 406 (t 25507 41393 362243 637000)) nil (25507 41488 96456 264000) 0 nil])
([nil nil ((344 . 346) (#("4" 0 1 (face tree-sitter-hl-face:type fontified t)) . -344) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (#("3" 0 1 (face tree-sitter-hl-face:type fontified t)) . -345) (undo-tree-id37 . -1) (undo-tree-id38 . -1) 346 (344 . 346) (#("4" 0 1 (face tree-sitter-hl-face:type fontified t)) . -344) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (#("3" 0 1 (face tree-sitter-hl-face:type fontified t)) . -345) (undo-tree-id41 . -1) (undo-tree-id42 . -1) 346 (339 . 346) (337 . 338) (339 . 341) (#("/" 0 1 (face tree-sitter-hl-face:operator fontified t)) . -339) (undo-tree-id43 . -1) (undo-tree-id44 . -1) 340 (329 . 340) (316 . 329) 315) nil (25507 41488 96453 262000) 0 nil])
([nil nil ((nil rear-nonsticky nil 359 . 360) (nil fontified nil 349 . 360) (349 . 360) 348) nil (25507 41488 96448 472000) 0 nil])
([nil nil ((337 . 338) (#(" " 0 1 (fontified t)) . -368) (undo-tree-id33 . -1) (undo-tree-id34 . -1) 369 (360 . 369)) nil (25507 41488 96447 826000) 0 nil])
([nil nil ((383 . 384) (#(")" 0 1 (face (rainbow-delimiters-mismatched-face tree-sitter-hl-face:punctuation.bracket) fontified t)) . -383) (undo-tree-id29 . 1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) 384 (371 . 384) (369 . 371)) nil (25507 41488 96446 83000) 0 nil])
([nil nil ((nil rear-nonsticky nil 396 . 397) (#("
" 0 1 (fontified nil)) . -452) (384 . 453) 383) nil (25507 41488 96443 639000) 0 nil])
([nil nil ((401 . 402) (#("r" 0 1 (face tree-sitter-hl-face:variable fontified t)) . 401)) nil (25507 41488 96442 994000) 0 nil])
([nil nil ((407 . 408) (#("x" 0 1 (fontified t)) . 407) (undo-tree-id28 . -1)) nil (25507 41488 96442 444000) 0 nil])
([nil nil ((422 . 428) (#("width" 0 5 (face (tree-sitter-hl-face:method.call tree-sitter-hl-face:property) fontified t)) . 422) (undo-tree-id24 . -4) (undo-tree-id25 . -1) (undo-tree-id26 . -5) (undo-tree-id27 . -5)) nil (25507 41488 96439 890000) 0 nil])
([nil nil ((495 . 496) (#("0" 0 1 (face tree-sitter-hl-face:constant.builtin fontified t)) . -495) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) 496 (492 . 493) (#("255" 0 3 (face tree-sitter-hl-face:constant.builtin fontified t)) . 492) (undo-tree-id96 . -2) (undo-tree-id97 . -2) (undo-tree-id98 . -3) (undo-tree-id99 . -2) (undo-tree-id100 . -1) (undo-tree-id101 . -3) (undo-tree-id102 . -3) (t 25507 41488 108804 997000)) nil (25507 41495 504778 388000) 0 nil])
([nil nil ((407 . 408) (#("j" 0 1 (fontified t)) . 407) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (t 25507 41495 516694 23000)) nil (25507 41516 149273 445000) 0 nil])
([nil current ((#("
    image::imageops::flip_vertical_in_place(&mut img);
" 0 1 (fontified t) 1 2 (face highlight-indent-guides-top-character-face display "│" fontified t highlight-indent-guides-prop (0 nil t 1 (character (nil) (face highlight-indent-guides-character-face display "│") (stack) (face highlight-indent-guides-stack-character-face display "│") (top) (face highlight-indent-guides-top-character-face display "│")) ((#<marker at 173 in main.rs> . #<marker at 1214 in main.rs>)))) 2 3 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 173 in main.rs> . #<marker at 1214 in main.rs>)))) 3 4 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 173 in main.rs> . #<marker at 1214 in main.rs>)))) 4 5 (fontified t highlight-indent-guides-prop (0 nil nil 1 nil ((#<marker at 173 in main.rs> . #<marker at 1214 in main.rs>)))) 5 10 (face tree-sitter-hl-face:constant fontified t) 10 12 (face tree-sitter-hl-face:punctuation.delimiter fontified t) 12 20 (face tree-sitter-hl-face:constant fontified t) 20 22 (face tree-sitter-hl-face:punctuation.delimiter fontified t) 22 44 (face tree-sitter-hl-face:function.call fontified t) 44 45 (face (rainbow-delimiters-depth-2-face tree-sitter-hl-face:punctuation.bracket) fontified t) 45 46 (face tree-sitter-hl-face:operator fontified t) 46 49 (face tree-sitter-hl-face:keyword fontified t) 49 53 (fontified t) 53 54 (face (rainbow-delimiters-depth-2-face tree-sitter-hl-face:punctuation.bracket) fontified t) 54 55 (face tree-sitter-hl-face:punctuation.delimiter fontified t) 55 56 (fontified t)) . 525) (undo-tree-id108 . -23) (undo-tree-id109 . -55) (undo-tree-id110 . -1) (undo-tree-id111 . -2) (undo-tree-id112 . -23) (undo-tree-id113 . -23) (undo-tree-id114 . -23) (undo-tree-id115 . -23) (undo-tree-id116 . -23) (undo-tree-id117 . -23) (undo-tree-id118 . -23) (undo-tree-id119 . -23) (undo-tree-id120 . -23) (undo-tree-id121 . -23) (undo-tree-id122 . -23) (undo-tree-id123 . -23) (undo-tree-id124 . -23) (undo-tree-id125 . -23) (undo-tree-id126 . -23) (undo-tree-id127 . -23) (undo-tree-id128 . -23) (undo-tree-id129 . -23) (undo-tree-id130 . -23) (undo-tree-id131 . -23) (undo-tree-id132 . -23) (undo-tree-id133 . -23) (undo-tree-id134 . -23) (undo-tree-id135 . -23) (undo-tree-id136 . -23) (undo-tree-id137 . -23) (undo-tree-id138 . -23) (undo-tree-id139 . -23) (undo-tree-id140 . -23) (undo-tree-id141 . -23) (undo-tree-id142 . -23) (undo-tree-id143 . -23) (undo-tree-id144 . -23) (undo-tree-id145 . -23) (undo-tree-id146 . -23) (undo-tree-id147 . -23) (undo-tree-id148 . -23) (undo-tree-id149 . -1) (undo-tree-id150 . -2) (undo-tree-id151 . -1) (undo-tree-id152 . -2) (undo-tree-id153 . -56) (undo-tree-id154 . -23) (undo-tree-id155 . -23) (undo-tree-id156 . -23) (undo-tree-id157 . -23) (undo-tree-id158 . -23) (undo-tree-id159 . -23) (undo-tree-id160 . -23) (undo-tree-id161 . -23) (undo-tree-id162 . -23) (undo-tree-id163 . -23) (undo-tree-id164 . -23) (undo-tree-id165 . -23) (undo-tree-id166 . -23) (undo-tree-id167 . -23) (undo-tree-id168 . -23) (undo-tree-id169 . -23) (undo-tree-id170 . -23) (undo-tree-id171 . -23) (undo-tree-id172 . -23) (undo-tree-id173 . -23) (undo-tree-id174 . -23) (undo-tree-id175 . -23) (undo-tree-id176 . -23) (undo-tree-id177 . -23) (undo-tree-id178 . -23) (undo-tree-id179 . -23) (undo-tree-id180 . -23) (undo-tree-id181 . -23) (undo-tree-id182 . -23) (undo-tree-id183 . -23) (undo-tree-id184 . -23) (undo-tree-id185 . -23) (undo-tree-id186 . -56) (t 25507 41516 168385 714000)) nil (25507 41541 37059 605000) 0 nil])
nil
